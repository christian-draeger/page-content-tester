# telling the fetcher the max response time in millis.
# if a timeout occurs a retry will be performed (if configured).
# if timeout is reached and no more retries left the fetcher will give up and throw a SocketTimeoutException.
paco.timeout=10000

# global time out in millis
# will mark all tests that are not finished within timeout as failed
# set to zero for non global timeout
paco.globalTimeout=0

# number of retries if timeout occurred while fetching
paco.maxRetryCountOnTimeOut=3

# if activated every url that have already been fetched will be taken from cache
paco.cacheDuplicates=true
paco.logCachedDuplicates=true

# user-agent that will be used for a standard get page call
paco.desktopUserAgent=Mozilla/5.0 (X11\\; Ubuntu\\; Linux x86_64\\; rv\\:25.0)

# user-agent that will be used to emulate mobile device
paco.mobileUserAgent=Mozilla/5.0 (iPhone\\; CPU iPhone OS 6_1_4 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10B350 Safari/8536.25

# referrer that will be send with the request
paco.referrer=http://www.google.com

paco.followRedirects=true
paco.ignoreContentType=true

paco.proxyHost=
paco.proxyPort=

# change value to ${protocol} to set from maven property
paco.protocol=http://
# url prefix e.g. for domains like http://en.wikipedia.org & http://de.wikipedia.org
# change value to ${urlPrefix} to set from maven property
paco.urlPrefix=
# change value to ${port} to set from maven property
paco.port=

paco.ascii=true